openapi: 3.0.0
info:
  title: API de Carrito
  version: 1.0.0
  description: Documentación de la API de gestión de carrito

paths:
  /carrito:
    get:
      summary: Obtener contenido del carrito
      tags:
        - Carrito
      responses:
        '200':
          description: Contenido del carrito
          content:
            application/json:
              example: |
                {
                  "products": [
                    {
                      "product": {
                        "id": "60a1c59b693bed0015a9d3a1",
                        "title": "Producto 1",
                        "description": "Descripción del producto 1",
                        "category": "Categoría 1",
                        "price": 100,
                        "thumbnail": "imagen1.jpg",
                        "stock": 10
                      },
                      "quantity": 2
                    },
                    {
                      "product": {
                        "id": "60a1c59b693bed0015a9d3a2",
                        "title": "Producto 2",
                        "description": "Descripción del producto 2",
                        "category": "Categoría 2",
                        "price": 150,
                        "thumbnail": "imagen2.jpg",
                        "stock": 5
                      },
                      "quantity": 1
                    }
                  ]
                }

  /carrito/agregar:
    post:
      summary: Agregar un producto al carrito
      tags:
        - Carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToCartRequest'
      responses:
        '200':
          description: Carrito actualizado exitosamente
        '404':
          description: Producto no encontrado

  /carrito/{cartId}:
    parameters:
      - name: cartId
        in: path
        required: true
        description: ID del carrito
        schema:
          type: string
    put:
      summary: Actualizar un carrito
      tags:
        - Carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartRequest'
      responses:
        '200':
          description: Carrito actualizado exitosamente

    delete:
      summary: Eliminar un carrito
      tags:
        - Carrito
      responses:
        '204':
          description: Carrito eliminado exitosamente

  /carrito/{cartId}/products:
    parameters:
      - name: cartId
        in: path
        required: true
        description: ID del carrito
        schema:
          type: string
    delete:
      summary: Eliminar todos los productos de un carrito
      tags:
        - Carrito
      responses:
        '200':
          description: Carrito actualizado exitosamente

  /carrito/{cartId}/products/{productId}:
    parameters:
      - name: cartId
        in: path
        required: true
        description: ID del carrito
        schema:
          type: string
      - name: productId
        in: path
        required: true
        description: ID del producto
        schema:
          type: string
    delete:
      summary: Eliminar un producto de un carrito
      tags:
        - Carrito
      responses:
        '200':
          description: Carrito actualizado exitosamente

    put:
      summary: Actualizar la cantidad de un producto en un carrito
      tags:
        - Carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductQuantityRequest'
      responses:
        '200':
          description: Carrito actualizado exitosamente

  /carrito/{cartId}/purchase:
    parameters:
      - name: cartId
        in: path
        required: true
        description: ID del carrito
        schema:
          type: string
    post:
      summary: Realizar una compra desde el carrito y actualiza el stock en DB
      tags:
        - Carrito
      responses:
        '200':
          description: Compra realizada exitosamente
        '400':
          description: ID de carrito inválido
        '404':
          description: Carrito no encontrado

    get:
      summary: Ver el ticket de compra
      tags:
        - Carrito
      responses:
        '200':
          description: Ticket de compra
          content:
            application/json:
              example:
                code: "20230823-abc123"
                purchase_datetime: "2023-08-23T12:34:56"
                purchaser: 
                  id: "64afe89d3ec913899377d55f"
                  firstName: "Prueba"
                  lastName: "preuba"
                  role: "user"
                  email: "prueba@correo.com"
                products: 
                  ticketProducts: []
                  failedProducts: []

components:
  schemas:
    AddProductToCartRequest:
      type: object
      properties:
        cartId:
          type: string
        productId:
          type: string
        quantity:
          type: number

    UpdateCartRequest:
      type: object
      properties:
        cartId:
          type: string
        productId:
          type: string
        quantity:
          type: number

    UpdateProductQuantityRequest:
      type: object
      properties:
        cartId:
          type: string
        productId:
          type: string
        quantity:
          type: number

    Ticket:
      type: object
      properties:
        code:
          type: string
          example: "20230823-abc123"
        purchase_datetime:
          type: string
          format: date-time
          example: "2023-08-23T12:34:56Z"
        amount:
          type: number
          example: 250.5
        purchaser:
          type: object
          properties:
            id:
              type: string
              example: "64afe89d3ec913899377d55f"
            firstName:
              type: string
              example: "Prueba"
            lastName:
              type: string
              example: "preuba"
            role:
              type: string
              example: "user"
            email:
              type: string
              example: "prueba@correo.com"